language: rust

git:
  depth: false

dist: trusty
sudo: required

cache:
  cargo: true
  timeout: 240
  directories:
    - $HOME/.cargo
    - $TRAVIS_BUILD_DIR/target

before_cache:
  - rm -rf $TRAVIS_BUILD_DIR/target/tmp

rust:
  - stable

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-5
      - cmake
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

env:
  global:
    - RUST_BACKTRACE="1"
    - RUST_FLAGS="-C debug-assertions"

matrix:
  include:
    - os: linux
      env: TEST_SUITE=servers
    - os: linux
      env: TEST_SUITE=chain-core
    - os: linux
      env: TEST_SUITE=pool-p2p-src
    - os: linux
      env: TEST_SUITE=keychain-wallet
    - os: linux
      env: TEST_SUITE=api-util-store
    - os: osx
      env: TEST_SUITE=release

script:
  - IFS='-' read -r -a DIRS <<< "$TEST_SUITE"; DIR=${DIRS[0]};
    echo "start testing on folder $DIR...";
    if [[ -n "$DIR" ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]];  then cd $DIR && cargo test --release && cd - > /dev/null; fi;
  - IFS='-' read -r -a DIRS <<< "$TEST_SUITE"; DIR=${DIRS[1]};
    if [[ -n "$DIR" ]];  then
      echo "start testing on folder $DIR...";
      cd $DIR && cargo test --release && cd - > /dev/null;
    fi;
  - IFS='-' read -r -a DIRS <<< "$TEST_SUITE"; DIR=${DIRS[2]};
    if [[ -n "$DIR" ]];  then
      echo "start testing on folder $DIR...";
      cd $DIR && cargo test --release && cd - > /dev/null;
    fi;

before_deploy:
  - if [[ "$TEST_SUITE" == "pool-p2p-src" ]]; then
      cargo clean && cargo build --release && ./.auto-release.sh;
    fi
  - if [[ "$TEST_SUITE" == "release" ]]  && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      cargo clean && cargo build --release && ./.auto-release.sh;
    fi

deploy:
  provider: releases
  api_key:
    secure: PBTFcoUmiQITkDdtFzrBlNR/5OgYHTCw+xVWGYu205xwTlj/ARBgw7DNt8dIdptLx+jOM2V5SbJqSFxs/CJ2ZcOHQZ6ubwpAJlRfuk3xDAi5JmuHYfcY+4SQ9l/0MgHnGfuml093xP7vTIYm2Vwwgdq8fd3jdWmvwgk9zgaGXB4UIXQA0yIs3EzxZpqiLg629Ouv7edMfyffwlG+rgQ1koe6sqeMCxIs0N3p97GCx19kNe0TV4dC7XAN74HreMdHmwxPKAK4xG/jtA1Snm0pMQ50Z0Kizt+0yrGOPMLnWwO9sS38iosBn3Vh1R8HKle2xBGflTtT/LG9lHdQZ5NF572q6681x6t7str4OjJ5bboy1PtNLFxG7RJCVIpp9gbouzdxIaJWRTxIdlk8UNQMrD8ieiNE6V1vZtbHGtJHRSJN1vO/XxsLlQDCyakLhG/nmSKXgiT9wIsu+zj/3oDe+LBt5QetEGYGBrCwUewjaQ7EP1rsT7alQrHTMad5DPjYftJuvfR+yBtz1qbzQwZVJpQC1KY1c476mXPQsaywuUrj56hH92p7P3vl6aMN2OPJZP+zENOVSURHc56KeTsDS55+KKzcRjCMA2L0LR1hP33+V5kavMHgCRrWIkxAkZ4eRqnermalzp8vlzL6EEoGm0VFLzv4mJmzrY1mC1LyCHo=
  file_glob: true
  file: target/release/grin-*.tgz*
  skip_cleanup: true
  on:
    repo: mimblewimble/grin
    tags: true
