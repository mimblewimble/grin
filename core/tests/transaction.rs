// Copyright 2018 The Grin Developers
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Transaction integration tests
extern crate grin_core;
extern crate grin_keychain as keychain;
extern crate grin_util as util;
extern crate grin_wallet as wallet;

pub mod common;

use grin_core::core::{Output, OutputFeatures, Transaction};
use grin_core::ser;
use keychain::{ExtKeychain, Keychain};
use wallet::libtx::proof;

#[test]
fn test_output_ser_deser() {
	let keychain = ExtKeychain::from_random_seed().unwrap();
	let key_id = keychain.derive_key_id(1).unwrap();
	let commit = keychain.commit(5, &key_id).unwrap();
	let proof = proof::create(&keychain, 5, &key_id, commit, None).unwrap();

	let out = Output {
		features: OutputFeatures::DEFAULT_OUTPUT,
		commit: commit,
		proof: proof,
	};

	let mut vec = vec![];
	ser::serialize(&mut vec, &out).expect("serialized failed");
	let dout: Output = ser::deserialize(&mut &vec[..]).unwrap();

	assert_eq!(dout.features, OutputFeatures::DEFAULT_OUTPUT);
	assert_eq!(dout.commit, out.commit);
	assert_eq!(dout.proof, out.proof);
}

#[test]
fn test_transaction_deser() {
	// auto generated array from a fuzz test input file: tx-read-crash
	// script:
	//     $ od -t x1 -v  tx-read-crash | sed 's/.*    /  /'  | sed 's/  /,0x/g'
	let d: [u8; 1062] = [
		0x45, 0xf1, 0xa9, 0x1d, 0x1c, 0x9a, 0xff, 0x1a, 0x3a, 0xba, 0x44, 0xb2, 0xc6, 0x55, 0xa3,
		0x81, 0x8d, 0xb7, 0x31, 0xec, 0x6f, 0xd1, 0x5c, 0x4f, 0xaf, 0x73, 0xb8, 0xc4, 0x57, 0x38,
		0x09, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x82, 0x02,
		0xe7, 0x65, 0x29, 0xc4, 0x29, 0xb8, 0xed, 0x66, 0xaa, 0x9c, 0x36, 0x5c, 0xe3, 0x2b, 0xd7,
		0x6b, 0x61, 0x6a, 0x6c, 0xf8, 0x59, 0x1d, 0xbb, 0x1d, 0x4d, 0x30, 0xe8, 0x1c, 0xef, 0x3f,
		0x00, 0x08, 0x6b, 0x8e, 0x4d, 0xb3, 0xda, 0xe5, 0xc3, 0x24, 0x62, 0x5d, 0xcb, 0xef, 0xed,
		0xff, 0x06, 0xb2, 0x03, 0x9f, 0x94, 0x50, 0xd1, 0x67, 0x5f, 0x27, 0xfb, 0x73, 0x55, 0xde,
		0xca, 0xda, 0x74, 0x9a, 0x00, 0x08, 0x4c, 0x40, 0xf8, 0x0e, 0xa3, 0x65, 0x66, 0x2a, 0x6f,
		0xca, 0x98, 0x1f, 0xa6, 0x1f, 0x5e, 0xd6, 0x07, 0x69, 0x8a, 0x1d, 0xaa, 0xa4, 0xc7, 0x14,
		0x60, 0xf4, 0x41, 0x70, 0x2c, 0x83, 0x25, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
		0xa3, 0xa8, 0x3d, 0x10, 0x8b, 0x23, 0xf6, 0xe1, 0xbc, 0x54, 0xa3, 0x91, 0x69, 0x64, 0x52,
		0x44, 0x06, 0x2c, 0x34, 0x06, 0x91, 0xfd, 0x68, 0xb4, 0x72, 0xe9, 0xca, 0xf5, 0xc9, 0xd4,
		0xdb, 0x29, 0xfb, 0x6f, 0x0c, 0xfc, 0x9c, 0x4c, 0xfe, 0x4b, 0xf8, 0x5c, 0x35, 0xec, 0xbd,
		0x47, 0x75, 0x06, 0xb4, 0xdf, 0x92, 0x67, 0x5d, 0x4e, 0x48, 0x23, 0xa8, 0x73, 0x14, 0xd3,
		0xde, 0x24, 0x9e, 0xe9, 0xc8, 0x0e, 0x6c, 0x81, 0x75, 0x0d, 0xa3, 0x85, 0x1a, 0x16, 0xb3,
		0xb7, 0x55, 0x3d, 0x9b, 0xf4, 0x0f, 0x31, 0x9b, 0x5e, 0x39, 0x03, 0xff, 0x14, 0xcc, 0x76,
		0x4b, 0x50, 0x69, 0xee, 0xa8, 0x33, 0x53, 0x39, 0xaf, 0xdd, 0xdc, 0x11, 0xac, 0xb1, 0x0e,
		0x19, 0x5d, 0xda, 0x62, 0x75, 0x15, 0x04, 0x68, 0xf4, 0x17, 0xea, 0x78, 0x56, 0x5c, 0x8c,
		0x27, 0x2f, 0x5a, 0xdf, 0x7b, 0xab, 0xdb, 0xca, 0x1c, 0x8d, 0xdc, 0x13, 0x54, 0x5b, 0xe1,
		0x28, 0x04, 0xcf, 0xce, 0xeb, 0x85, 0x59, 0xd7, 0x1f, 0xf8, 0xe1, 0x4d, 0xbc, 0xdd, 0x66,
		0x83, 0xb1, 0x91, 0xd3, 0x0a, 0xc9, 0xf2, 0xf3, 0xc8, 0xad, 0x0a, 0x20, 0x3c, 0xad, 0x9b,
		0x70, 0xd5, 0x3c, 0x0c, 0xf6, 0x73, 0x84, 0xd7, 0x72, 0xd3, 0xc3, 0x79, 0xbe, 0x06, 0x64,
		0x3d, 0x82, 0xad, 0x3e, 0xc1, 0x4b, 0xda, 0x4f, 0x22, 0xe8, 0x65, 0x64, 0x0b, 0xa0, 0x37,
		0x54, 0x91, 0x9f, 0x1b, 0x6a, 0x64, 0xa2, 0x33, 0x1b, 0xd2, 0xc7, 0x9f, 0xf9, 0xd0, 0x4e,
		0x58, 0xaa, 0x07, 0xa9, 0x6a, 0x21, 0x59, 0x81, 0xd4, 0xaa, 0xdc, 0xce, 0x79, 0xaf, 0x64,
		0x1c, 0x3f, 0xb2, 0x52, 0xc4, 0x77, 0x2d, 0xf8, 0x4f, 0xfe, 0x8d, 0x27, 0x48, 0xe3, 0xd2,
		0x66, 0xd6, 0xeb, 0x3b, 0xf6, 0x83, 0xd5, 0xce, 0xfa, 0x04, 0xbe, 0x57, 0x0f, 0x23, 0x67,
		0xf4, 0xb0, 0x6e, 0x8e, 0x89, 0x02, 0xb3, 0xd0, 0x3f, 0x99, 0x6e, 0xc9, 0x78, 0xfe, 0xf5,
		0xe8, 0x02, 0x86, 0x44, 0xd2, 0x31, 0x58, 0xa2, 0x65, 0xeb, 0xa6, 0xbe, 0xd7, 0x76, 0x6a,
		0xe8, 0xa2, 0x23, 0x15, 0xe1, 0xd6, 0xcb, 0x1c, 0x20, 0xbb, 0x8e, 0x3b, 0x6f, 0x09, 0x4a,
		0x8d, 0xb1, 0x60, 0x48, 0xc4, 0xd5, 0xb1, 0x29, 0x82, 0x68, 0x0e, 0x49, 0x58, 0x17, 0x87,
		0x9b, 0x10, 0x52, 0xd0, 0x8c, 0x7d, 0x10, 0xf2, 0x9b, 0x88, 0x68, 0x62, 0xe3, 0x79, 0x83,
		0xc5, 0x4f, 0xd9, 0xab, 0xa8, 0x3b, 0xe0, 0xdf, 0x46, 0xbf, 0x7a, 0xf9, 0x97, 0xeb, 0x50,
		0x70, 0xf3, 0x26, 0x8d, 0x29, 0x0f, 0x9a, 0x48, 0x19, 0xfa, 0x03, 0x5f, 0x8c, 0x82, 0xf4,
		0x08, 0x93, 0xaf, 0x2e, 0x7d, 0xd4, 0xd6, 0xd3, 0x38, 0x25, 0x37, 0xbe, 0x85, 0x5f, 0xf9,
		0xf9, 0x10, 0xcf, 0x75, 0x69, 0x2c, 0xa0, 0xb7, 0xf9, 0xff, 0xe0, 0xb6, 0xa7, 0x4a, 0xa5,
		0x60, 0xbf, 0xcc, 0x29, 0x40, 0xb3, 0x43, 0x0c, 0x33, 0xff, 0x3a, 0x10, 0x12, 0xda, 0x6d,
		0x6b, 0x20, 0x17, 0xfa, 0xb6, 0x74, 0x6c, 0xc5, 0xc8, 0xe7, 0x79, 0xf7, 0x64, 0xb5, 0x6f,
		0xb0, 0x87, 0x3a, 0x86, 0x92, 0xc6, 0x94, 0x46, 0x2c, 0x62, 0xa6, 0x1d, 0x36, 0xcb, 0x67,
		0x29, 0x6e, 0x02, 0xbd, 0x0e, 0xa2, 0x0e, 0xbe, 0x0f, 0x51, 0xb2, 0x4c, 0x80, 0x83, 0x67,
		0x6e, 0x6b, 0x6b, 0x56, 0xab, 0xaf, 0x01, 0x39, 0x6d, 0x79, 0x95, 0x44, 0xe9, 0xfc, 0x28,
		0xb8, 0x14, 0x50, 0xb2, 0x65, 0x9c, 0xa1, 0x35, 0x24, 0xc5, 0xca, 0x99, 0x85, 0x9c, 0xa9,
		0xa4, 0x2f, 0x7b, 0x75, 0x6b, 0x67, 0xdc, 0x99, 0x80, 0x58, 0x54, 0xcd, 0x45, 0xff, 0x36,
		0xd8, 0xa2, 0xc0, 0xf7, 0x6d, 0x5e, 0x3c, 0x1a, 0xc9, 0x1f, 0x1e, 0x35, 0x58, 0xaa, 0xad,
		0x56, 0x5a, 0x2f, 0xbe, 0x37, 0xf3, 0xba, 0xb7, 0x01, 0x89, 0x71, 0x76, 0xf2, 0xbe, 0x4d,
		0xba, 0x2e, 0xbd, 0xfb, 0x07, 0xc2, 0x7a, 0x2a, 0x32, 0x7f, 0xb1, 0xc0, 0x75, 0xc0, 0x36,
		0x5f, 0x6d, 0xa2, 0xe7, 0x25, 0x55, 0x65, 0xd4, 0x50, 0xfb, 0xf0, 0xb5, 0xac, 0x18, 0x76,
		0xbc, 0x3e, 0xc5, 0xda, 0x88, 0x8a, 0xce, 0xc1, 0xca, 0x7f, 0xce, 0x09, 0x78, 0x8d, 0x18,
		0x05, 0xc6, 0xcd, 0x65, 0x0f, 0xf4, 0x84, 0x9b, 0xe0, 0xb6, 0x8e, 0x67, 0x45, 0x5f, 0x15,
		0x14, 0x4b, 0x37, 0x0e, 0xe4, 0x24, 0x84, 0xfc, 0x0f, 0xfe, 0xfc, 0x80, 0x92, 0xc7, 0xb8,
		0x68, 0xdb, 0x7f, 0x48, 0x3c, 0x79, 0x6b, 0x56, 0x9c, 0x0e, 0x94, 0x3a, 0xfc, 0x5d, 0x87,
		0x21, 0x32, 0x01, 0x42, 0x4f, 0x32, 0x3d, 0x25, 0xbd, 0xc9, 0x63, 0x53, 0x09, 0xea, 0x5c,
		0xc2, 0x31, 0x48, 0xb6, 0x56, 0xdf, 0xc2, 0x91, 0xb7, 0x86, 0xc8, 0x14, 0x3c, 0x6e, 0x75,
		0xc5, 0x64, 0x08, 0xa6, 0x88, 0x06, 0x28, 0xb1, 0xc4, 0x02, 0xaa, 0xeb, 0xad, 0x88, 0x1e,
		0x72, 0xe8, 0x36, 0x69, 0xa2, 0x03, 0x6c, 0xc4, 0xc5, 0xca, 0x3e, 0x52, 0x57, 0x70, 0x59,
		0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x08, 0x59, 0x08, 0xab, 0x74, 0x72, 0xbb, 0xc7, 0x12, 0xe8, 0x02, 0xaf,
		0x48, 0x76, 0xfd, 0x30, 0x9b, 0x1e, 0x8e, 0xf7, 0xd4, 0xc8, 0x6d, 0x85, 0x40, 0xec, 0xce,
		0xd7, 0x05, 0xf5, 0x9f, 0xd0, 0xfb, 0x19, 0x0c, 0x28, 0x92, 0x4b, 0x83, 0x6c, 0xe8, 0xd8,
		0xc5, 0x12, 0x98, 0xd9, 0x89, 0x4f, 0x0d, 0x54, 0x12, 0x51, 0x08, 0x9d, 0x4b, 0xf8, 0x8d,
		0x13, 0xf7, 0x5f, 0xab, 0xf6, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0xdd, 0xcf, 0xc5, 0x71, 0x4a, 0x89,
		0x9d, 0xdd, 0x06, 0xc5, 0xf7, 0xfc, 0xc3, 0x17, 0x86, 0xc9, 0xf7, 0xc8, 0x99, 0xd2, 0x0a,
		0x85, 0xf8, 0xf0, 0x02, 0x56, 0x13, 0xbc, 0x72, 0xab, 0xf6, 0xe9, 0xf4,
	];
	let tx: Result<Transaction, ser::Error> = ser::deserialize(&mut d.as_ref());
	if !tx.is_err() {
		panic!("Transaction deserialize should have error for this test.");
	}
}
